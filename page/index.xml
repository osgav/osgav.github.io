<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Pages on osgav</title>
    <link>https://osgav.run/page/</link>
    <description>Recent content in Pages on osgav</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 11 Jun 2016 20:10:08 +0000</lastBuildDate>
    <atom:link href="https://osgav.run/page/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Hugo Build and Publish Workflow</title>
      <link>https://osgav.run/page/projects/hugo-build-and-publish-workflow/</link>
      <pubDate>Sat, 11 Jun 2016 20:10:08 +0000</pubDate>
      
      <guid>https://osgav.run/page/projects/hugo-build-and-publish-workflow/</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;https://osgav.run/page/projects&#34;&gt;&amp;lt; back to projects&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;building:b0d24be26c981e452cbdca0cff1978e4&#34;&gt;building&lt;/h3&gt;

&lt;p&gt;To make building and previewing changes locally easier, I wrote a couple of short scripts. For context, I run the &lt;code&gt;hugo&lt;/code&gt; commands inside a vagrant virtual machine (linux) and access the site using a web browser on the host machine (windows).&lt;/p&gt;

&lt;p&gt;In the source for my hugo site, I have a &lt;code&gt;hugo&lt;/code&gt; folder for these scripts. This makes running them similar to invoking the &lt;code&gt;hugo&lt;/code&gt; command itself:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ls -1 osgav
archetypes
config.toml
content
data
hugo
layouts
public
static
themes

$ tree osgav/hugo/
osgav/hugo/
├── build-public
├── serve
└── serve-withdrafts

$ ./hugo/serve
$ ./hugo/build-public
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;As mentioned in &lt;a href=&#34;https://osgav.run/page/hugo-markdown-cheatsheet&#34;&gt;Hugo Markdown Cheatsheet&lt;/a&gt;, if you run &lt;code&gt;hugo server&lt;/code&gt; with the parameter &lt;code&gt;--buildDrafts&lt;/code&gt; then any posts or pages where &lt;code&gt;draft = true&lt;/code&gt; will also be published to the blog on the local hugo server.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;--buildDrafts&lt;/code&gt; parameter is the only difference between the &lt;code&gt;serve&lt;/code&gt; and &lt;code&gt;serve-withdrafts&lt;/code&gt; scripts.&lt;/p&gt;

&lt;p&gt;Both the &lt;code&gt;serve&lt;/code&gt; and &lt;code&gt;build-public&lt;/code&gt; scripts ignore drafts, so I can use &lt;code&gt;serve&lt;/code&gt; first to preview what will be generated after I run &lt;code&gt;build-public&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Until I take a look at live reloading, this let&amp;rsquo;s me do the following to make changes and preview them - my &lt;strong&gt;&lt;em&gt;build workflow:&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ vi content/page/hugo-build-and-publish-workflow.md
&amp;lt;make edits&amp;gt;
$ ./hugo/serve-withdrafts
...
Press Ctrl+C to stop
&amp;lt;preview changes&amp;gt;
&amp;lt;ctrl+c to stop hugo server&amp;gt;

repeat
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;With live reload I shouldn&amp;rsquo;t need to stop the server to make changes - simply saving changes &lt;s&gt;and refreshing the page in the browser&lt;/s&gt; will be enough.&lt;/p&gt;

&lt;p&gt;I use a mixture of &lt;code&gt;vi&lt;/code&gt; and &lt;a href=&#34;https://www.sublimetext.com/&#34;&gt;Sublime&lt;/a&gt; - &lt;s&gt;I suspect I may use Sublime more once I configure live reload&amp;hellip;&lt;/s&gt; &lt;em&gt;Wrong! LiveReload is already enabled by default, but &lt;code&gt;hugo server&lt;/code&gt; only seems to be able to detect changes to files made from inside my virtual machine - using Sublime on the host isn&amp;rsquo;t detected, so the page is not reloaded&amp;hellip;&lt;/em&gt;&lt;/p&gt;

&lt;h5 id=&#34;what-s-in-the-scripts:b0d24be26c981e452cbdca0cff1978e4&#34;&gt;what&amp;rsquo;s in the scripts?&lt;/h5&gt;

&lt;p&gt;&lt;strong&gt;&lt;code&gt;./hugo/serve&lt;/code&gt;&lt;/strong&gt;&lt;br /&gt;
The &lt;code&gt;serve&lt;/code&gt; scripts also use the &lt;code&gt;hugo server&lt;/code&gt; parameters &lt;code&gt;--port&lt;/code&gt; &lt;code&gt;--bind&lt;/code&gt; &amp;amp; &lt;code&gt;--baseURL&lt;/code&gt; which let me correctly serve the site from my vagrant virtual machine and make it accessible to the host (&lt;code&gt;1313&lt;/code&gt; is actually the default port, &lt;code&gt;192.168.56.2&lt;/code&gt; is required or else its only accessible inside the virtual machine - this is the virtual machine&amp;rsquo;s IP on a Host-only Network that the host is also connected to. &lt;code&gt;http://192.168.56.2:1313/&lt;/code&gt; overrides the value specified in &lt;code&gt;config.toml&lt;/code&gt; that contains the site&amp;rsquo;s public domain).&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#!/bin/bash
hugo server --theme=casper \
--port=1313 \
--bind=192.168.56.2 \
--baseURL=&amp;quot;http://192.168.56.2:1313/&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;&lt;code&gt;./hugo/serve-withdrafts&lt;/code&gt;&lt;/strong&gt;&lt;br /&gt;
The only difference is &lt;code&gt;--buildDrafts \&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;...
hugo server --theme=casper \
--buildDrafts \
--port=1313 \
...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;&lt;code&gt;./hugo/build-public&lt;/code&gt;&lt;/strong&gt;&lt;br /&gt;
The &lt;code&gt;build-public&lt;/code&gt; script also adds a &lt;code&gt;CNAME&lt;/code&gt; file to the root of the output directory &lt;code&gt;public&lt;/code&gt;. This file contains &lt;code&gt;osgav.run&lt;/code&gt; which enables GitHub Pages to serve from a custom domain once its being served from the correct place in GitHub.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#!/bin/bash
hugo --theme=casper

# add CNAME file to public
touch public/CNAME
echo &amp;quot;osgav.run&amp;quot; &amp;gt; public/CNAME
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;publishing:b0d24be26c981e452cbdca0cff1978e4&#34;&gt;publishing&lt;/h3&gt;

&lt;p&gt;I haven&amp;rsquo;t scripted the publishing steps yet - need to rename some things for better structuring - &lt;em&gt;like cleanly deploying another hugo site in another repo&amp;rsquo;s &lt;code&gt;gh-pages&lt;/code&gt; branch or simply not messing up this site&amp;hellip;&lt;/em&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a href=&#34;https://osgav.run/page/projects&#34;&gt;&amp;lt; back to projects&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hugo Markdown Cheatsheet</title>
      <link>https://osgav.run/page/projects/hugo-markdown-cheatsheet/</link>
      <pubDate>Sat, 11 Jun 2016 16:40:05 +0000</pubDate>
      
      <guid>https://osgav.run/page/projects/hugo-markdown-cheatsheet/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://osgav.run/page/projects&#34;&gt;&amp;lt; back to projects&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;TL;DR&lt;/strong&gt; there is a cheatsheet for Hugo Markdown available in my github (actually not yet, but will be soon), transcribed from &lt;a href=&#34;https://sourceforge.net/p/hugo-generator/wiki/markdown_syntax/&#34;&gt;https://sourceforge.net/p/hugo-generator/wiki/markdown_syntax/&lt;/a&gt; (not all of it - and a couple of bits from gohugo docs)&lt;/p&gt;

&lt;p&gt;You can make this particularly handy by doing something like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ tree osgav/content
osgav/content
├── page
│   ├── hugo-markdown-cheatsheet.md
│   └── projects.md
└── post
    ├── cheatsheet.md
    ├── whois-osgav.md
    └── zerodots.md
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Keep a copy of &lt;code&gt;cheatsheet.md&lt;/code&gt; as a draft post, with a date in the future - this will make it the most recent post in your blog, so it will be the first post you see when testing locally with &lt;code&gt;hugo server&lt;/code&gt; (and passing in the &lt;code&gt;--buildDrafts&lt;/code&gt; parameter).&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ head content/post/cheatsheet.md
+++
author = &amp;quot;osgav&amp;quot;
date = &amp;quot;2070-01-01T00:00:00Z&amp;quot;
draft = true
slug = &amp;quot;cheatsheet&amp;quot;
tags = [&amp;quot;formatting-cheatsheet-dont-undraft&amp;quot;]
title = &amp;quot;cheatsheet&amp;quot;

+++
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://osgav.run/images/hugo_cheatsheet_draft.png&#34; alt=&#34;hugo cheatsheet draft&#34; /&gt;
&lt;img src=&#34;https://osgav.run/images/hugo_cheatsheet.png&#34; alt=&#34;hugo cheatsheet&#34; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a href=&#34;https://osgav.run/page/projects&#34;&gt;&amp;lt; back to projects&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>$ cd projects</title>
      <link>https://osgav.run/page/projects/</link>
      <pubDate>Sat, 11 Jun 2016 16:39:58 +0000</pubDate>
      
      <guid>https://osgav.run/page/projects/</guid>
      <description>

&lt;p&gt;Project pages for content outside of or accompanying blog posts&lt;/p&gt;

&lt;h5 id=&#34;this-blog:3c42bb4157bf51d85ae7ffc4e1685909&#34;&gt;this blog&lt;/h5&gt;

&lt;p&gt;&lt;strong&gt;11/06/2016:&lt;/strong&gt; &lt;a href=&#34;https://osgav.run/page/projects/hugo-build-and-publish-workflow&#34;&gt;Hugo Build and Publish Workflow&lt;/a&gt; (in progress)&lt;br /&gt;
&lt;strong&gt;11/06/2016:&lt;/strong&gt; &lt;a href=&#34;https://osgav.run/page/projects/hugo-markdown-cheatsheet&#34;&gt;Hugo Markdown Cheatsheet&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>